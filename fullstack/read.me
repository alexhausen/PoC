npm init -y
npm install typescript
npm install jest
npx tsc
npx jest

# npx executa as dependências do projeto

# monitora alterações no arquivo
npm install --save-dev nodemon
npx nodemon src/main.js

# pm2 = process manager (produção)
npm install pm2
npx pm2 list
# inicia 4 instâncias (load balancer)
npx pm2 start <arquivo.js> -i 4

# inicia n instâncias (n = número de cores)
npx pm2 start <arquivo.js> -i max

# reload da página similar ao nodemon (não usar em produção)
npx pm2 start <arquivo.js> --watch

# arquivo de config do pm2: ecosystem.config.js

# exibe logs (console)
npx pm2 log

# monitor básico
npx pm2 monit

# cria o tsconfig.json
npx tsc --init

# transpila o código
npx tsc

# executa o código transpilado (ver outDir do tsconfig.json)
node dist/main.js

# executa com JIT sem precisar transpilar
npm install --save-dev ts-node
npx ts-node src/main.ts

# executa com o ts-node e nodemon
npx nodemon src/main.ts

# dependências projeto
npm install --save jest @types/jest nodemon ts-node ts-jest express @types/express axios pg-promise

# habilita o jest para o typescript
npx ts-jest config:init

# install docker:
https://docs.docker.com/engine/install/ubuntu/

sudo groupadd docker
sudo usermod -aG docker $USER

docker run hello-world
docker compose version

docker compose up -d

# 172.17.0.1 === docker's localhost

# pgadmin config:
name: local-db
host: 172.17.0.1
port: 5432
user: postgres
password: 12345


